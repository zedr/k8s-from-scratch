---
- hosts: all
  vars:
    base_url: "https://github.com/etcd-io/etcd/releases/download"
    version: "3.4.9"
    target_dir: "/usr/local/bin"
    arch: amd64
    internal_ip:
  tasks:

    - set_fact:
        internal_ip: "{{ ansible_default_ipv4.address }}"
      when: not internal_ip

    - block:

        - name: Get Etcd distribution
          unarchive: 
            src: "{{ base_url}}/v{{ version }}/etcd-v{{ version }}-linux-{{ arch }}.tar.gz"
            remote_src: yes
            dest: "/tmp/"
            creates: "/tmp/etcd-v{{ version }}-linux-amd64"

        - name: Copy Etcd binaries
          copy:
            src: "/tmp/etcd-v{{ version }}-linux-amd64/{{ item }}"
            dest: "/usr/local/bin/"
            remote_src: yes
            mode: "u+x"
          with_items:
            - etcd
            - etcdctl

      when: arch == "amd64"

    - block:

        - name: "Checkout the etcd codebase at version {{ version }}"
          git:
            repo: "https://github.com/coreos/etcd.git"
            dest: "{{ ansible_env.HOME}}/src/etcd"
            version: "v{{ version }}"
            update: no

        - name: Fetch vendor dependencies
          command:
            chdir: "{{ ansible_env.HOME}}/src/etcd"
            cmd: "go mod vendor"

        - name: Build etcd 
          command:
            chdir: "{{ ansible_env.HOME}}/src/etcd"
            cmd: make
            creates: "{{ ansible_env.HOME}}/src/etcd/bin/etcd"
          register: make_result
          environment:
            ETCD_UNSUPPORTED_ARCH: arm

        - name: Install etcd
          copy:
            src: "{{ ansible_env.HOME}}/src/etcd/bin/{{ item }}"
            remote_src: yes
            dest: "{{ target_dir }}/{{ item }}"
            mode: 0755
          with_items:
            - etcd
            - etcdctl

        - name: Add environment variable needed on ARM
          blockinfile:
            path: /etc/profile.d/etcd-arm.sh
            create: yes
            content: "ETCD_UNSUPPORTED_ARCH=arm"

      when: arch == "arm"

    - name: Configure Etcd
      file:
        path: "{{ item }}"
        mode: 0700
        state: directory
      with_items:
        - "/etc/etcd"
        - "/var/lib/etcd"

    - name: Create an environment file for etcd on ARM
      blockinfile:
        path: /etc/etcd/etcd.conf
        content: |
          ETCD_UNSUPPORTED_ARCH=arm
        create: yes
      when: arch == "arm"

    - name: Create an empty environment file for etcd on AMD64
      command: 
        cmd: "touch /etc/etcd/etcd.conf"
        creates: "/etc/etcd/etcd.conf"
      when: arch == "amd64"

    - include_tasks: sysctl.yml
      when: arch == "amd64"

    - name: Copy the certificate to the Etcd config directory
      copy:
        src: "{{ ansible_env.HOME }}/{{ item }}"
        remote_src: yes
        dest: "/etc/etcd/"
      with_items:
        - ca.pem
        - kubernetes-key.pem
        - kubernetes.pem

    - name: Create the Unit for Etcd
      blockinfile:
        path: "/etc/systemd/system/etcd.service"
        create: yes
        content: |
          [Unit]
          Description=etcd
          Documentation=https://github.com/coreos

          [Service]
          Type=notify
          ExecStart=/usr/local/bin/etcd \
            --name {{ ansible_hostname }} \
            --cert-file=/etc/etcd/kubernetes.pem \
            --key-file=/etc/etcd/kubernetes-key.pem \
            --peer-cert-file=/etc/etcd/kubernetes.pem \
            --peer-key-file=/etc/etcd/kubernetes-key.pem \
            --trusted-ca-file=/etc/etcd/ca.pem \
            --peer-trusted-ca-file=/etc/etcd/ca.pem \
            --peer-client-cert-auth \
            --client-cert-auth \
            --initial-advertise-peer-urls https://{{ internal_ip }}:2380 \
            --listen-peer-urls https://{{ internal_ip }}:2380 \
            --listen-client-urls https://{{ internal_ip }}:2379,https://127.0.0.1:2379 \
            --advertise-client-urls https://{{ internal_ip }}:2379 \
            --initial-cluster-token etcd-cluster-0 \
            --initial-cluster {{ ansible_hostname }}=https://{{ internal_ip }}:2380 \
            --initial-cluster-state new \
            --data-dir=/var/lib/etcd
          Restart=on-failure
          RestartSec=5
          EnvironmentFile=/etc/etcd/etcd.conf

          [Install]
          WantedBy=multi-user.target

    - name: Enable and start the service
      systemd:
        name: etcd
        daemon_reload: yes
        enabled: yes
        state: restarted

    - name: Verify that Etcd is running by querying the member list
      command:
        argv:
          - "etcdctl"
          - "member"
          - "list"
          - "--endpoints"
          - "https://{{ internal_ip }}:2379"
          - "--cacert"
          - "/etc/etcd/ca.pem"
          - "--cert"
          - "/etc/etcd/kubernetes.pem"
          - "--key"
          - "/etc/etcd/kubernetes-key.pem"
      environment:
        ETCDCTL_API: 3
      register: "check_result"
      tags:
        - check

    - name: Print the Etcd member list
      debug:
        msg: "{{ check_result.stdout }}"
      tags:
        - check

