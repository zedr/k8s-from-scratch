---
- hosts: k8s
  vars:
    internal_ip:
    cluster_cidr: "10.32.0.0/24"
    pod_cidr: "10.200.0.0/16"
  tasks:

    - set_fact:
        internal_ip: "{{ ansible_default_ipv4.address }}"
      when: not internal_ip

    - name: Create the Kubernetes var/lib directory
      file:
        path: "/var/lib/kubernetes"
        state: directory
        mode: 0700
    
    - name: Copy the Kubernetes certificates
      copy:
        src: "{{ ansible_env.HOME }}/{{ item }}"
        remote_src: yes
        dest: "/var/lib/kubernetes/"
      with_items:
        - "ca.pem"
        - "ca-key.pem"
        - "kubernetes-key.pem"
        - "kubernetes.pem"
        - "service-account-key.pem"
        - "service-account.pem"
        - "encryption-config.yml"
        - "kube-controller-manager.kubeconfig"
        - "kube-scheduler.kubeconfig"

    - name: Create API Server Unit
      blockinfile:
        path: "/etc/systemd/system/kube-apiserver.service"
        create: yes
        content: |
          [Unit]
          Description=Kubernetes API Server
          Documentation=https://github.com/kubernetes/kubernetes

          [Service]
          ExecStart=/usr/local/bin/kube-apiserver \
            --advertise-address={{ internal_ip }} \
            --allow-privileged=true \
            --apiserver-count=3 \
            --audit-log-maxage=30 \
            --audit-log-maxbackup=3 \
            --audit-log-maxsize=100 \
            --audit-log-path=/var/log/audit.log \
            --authorization-mode=Node,RBAC \
            --bind-address=0.0.0.0 \
            --client-ca-file=/var/lib/kubernetes/ca.pem \
            --enable-admission-plugins=NamespaceLifecycle,NodeRestriction,LimitRanger,ServiceAccount,DefaultStorageClass,ResourceQuota \
            --etcd-cafile=/var/lib/kubernetes/ca.pem \
            --etcd-certfile=/var/lib/kubernetes/kubernetes.pem \
            --etcd-keyfile=/var/lib/kubernetes/kubernetes-key.pem \
            --etcd-servers=https://127.0.0.1:2379 \
            --event-ttl=1h \
            --encryption-provider-config=/var/lib/kubernetes/encryption-config.yml \
            --kubelet-certificate-authority=/var/lib/kubernetes/ca.pem \
            --kubelet-client-certificate=/var/lib/kubernetes/kubernetes.pem \
            --kubelet-client-key=/var/lib/kubernetes/kubernetes-key.pem \
            --kubelet-https=true \
            --runtime-config=api/all=true \
            --service-account-key-file=/var/lib/kubernetes/service-account.pem \
            --service-cluster-ip-range={{ cluster_cidr }} \
            --service-node-port-range=30000-32767 \
            --tls-cert-file=/var/lib/kubernetes/kubernetes.pem \
            --tls-private-key-file=/var/lib/kubernetes/kubernetes-key.pem \
            --service-account-issuer=api \
            --service-account-api-audiences=api \
            --service-account-signing-key-file=/var/lib/kubernetes/service-account-key.pem \
            --v=2
          Restart=on-failure
          RestartSec=5

          [Install]
          WantedBy=multi-user.target

    - name: Create Controller Manager Unit
      blockinfile:
        path: "/etc/systemd/system/kube-controller-manager.service"
        create: yes
        content: |
          [Unit]
          Description=Kubernetes Controller Manager
          Documentation=https://github.com/kubernetes/kubernetes

          [Service]
          ExecStart=/usr/local/bin/kube-controller-manager \
            --bind-address=0.0.0.0 \
            --cluster-cidr={{ pod_cidr }} \
            --cluster-name=kubernetes \
            --cluster-signing-cert-file=/var/lib/kubernetes/ca.pem \
            --cluster-signing-key-file=/var/lib/kubernetes/ca-key.pem \
            --kubeconfig=/var/lib/kubernetes/kube-controller-manager.kubeconfig \
            --leader-elect=true \
            --root-ca-file=/var/lib/kubernetes/ca.pem \
            --service-account-private-key-file=/var/lib/kubernetes/service-account-key.pem \
            --service-cluster-ip-range={{ cluster_cidr }} \
            --use-service-account-credentials=true \
            --v=2
          Restart=on-failure
          RestartSec=5

          [Install]
          WantedBy=multi-user.target

    - name: Create Kube Scheduler config resource
      blockinfile:
        path: "/etc/kubernetes/config/kube-scheduler.yml"
        create: yes
        content: |
          apiVersion: kubescheduler.config.k8s.io/v1beta1
          kind: KubeSchedulerConfiguration
          clientConnection:
            kubeconfig: "/var/lib/kubernetes/kube-scheduler.kubeconfig"
          leaderElection:
            leaderElect: true

    - name: Create Kube Scheduler Unit
      blockinfile:
        path: "/etc/systemd/system/kube-scheduler.service"
        create: yes
        content: |
          [Unit]
          Description=Kubernetes Scheduler
          Documentation=https://github.com/kubernetes/kubernetes

          [Service]
          ExecStart=/usr/local/bin/kube-scheduler \
            --config=/etc/kubernetes/config/kube-scheduler.yml \
            --v=2
          Restart=on-failure
          RestartSec=5

          [Install]
          WantedBy=multi-user.target

    - name: Enable and start the services
      systemd:
        name: "{{ item }}"
        daemon_reload: yes
        enabled: yes
        state: restarted
      with_items:
        - kube-apiserver
        - kube-controller-manager
        - kube-scheduler
